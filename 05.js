// При умножении чисел в JavaScript, если результат превышает максимальное значение, которое может быть представлено числом с плавающей запятой, точность может быть потеряна, и результат может быть некорректным.
// Когда мы представляем числа в виде строк и выполняем умножение, используя алгоритм умножения столбиком, мы можем правильно обрабатывать каждую цифру числа и получать корректный результат, даже если числа очень большие.

function multiply(a, b) {
  const num1 = a.length; // Определяем длину первого числа
  const num2 = b.length; // Определяем длину второго числа
  const result = Array(num1 + num2).fill(0); // Создаем массив длиной, достаточной для хранения результата умножения

  for (let i = num1 - 1; i >= 0; i--) {
    // Итерируемся по первому числу справа налево
    for (let j = num2 - 1; j >= 0; j--) {
      // Итерируемся по второму числу справа налево
      const product = parseInt(a[i]) * parseInt(b[j]); // Умножаем текущие цифры первого и второго чисел
      const sum = result[i + j + 1] + product; // Складываем результат с предыдущим значением в текущей позиции результата

      result[i + j + 1] = sum % 10; // Записываем остаток от деления суммы на 10 в текущую позицию результата
      result[i + j] += Math.floor(sum / 10); // Добавляем целую часть от деления суммы на 10 к следующей позиции результата
    }
  }

  while (result[0] === 0) {
    // Удаляем ведущие нули из результата
    result.shift();
  }

  return result.length ? result.join("") : "0"; // Преобразуем результат в строку и возвращаем его, если он не пустой, иначе возвращаем '0'
}
